// <auto-generated />
using Ejercicio2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ejercicio2.Migrations
{
    [DbContext(typeof(Ejercicio2Context))]
    [Migration("20231111223754_tablasYSeeder")]
    partial class tablasYSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Ejercicio2.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("genreId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Juego de guerra del futuro",
                            Name = "Terminator 1",
                            genreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Juego de guerra del futuro",
                            Name = "Terminator 2",
                            genreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Juego de guerra del futuro",
                            Name = "Terminator 3",
                            genreId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Juego de entretenimiento en varios mundo, el cual se lucha contra monstruos",
                            Name = "Super Mario Bross",
                            genreId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "Juego de entretenimiento en varios mundo, el cual se lucha contra monstruos",
                            Name = "Super Mario Bross",
                            genreId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "Juego de entretenimiento en varios mundo, el cual se lucha contra monstruos",
                            Name = "Super Mario Bross",
                            genreId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Juego de lucha",
                            Name = "Tekken 6",
                            genreId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Juego de lucha",
                            Name = "Tekken 7",
                            genreId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "Juego de lucha",
                            Name = "Tekken 8",
                            genreId = 3
                        });
                });

            modelBuilder.Entity("Ejercicio2.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Genero con violencia y sangre",
                            Name = "guerra"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Genero con paisajes, varios mundos, mundo abierto.",
                            Name = "aventura"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Genero en el cual tiene violencia, puede contener sangre.",
                            Name = "lucha"
                        });
                });

            modelBuilder.Entity("Ejercicio2.Models.Game", b =>
                {
                    b.HasOne("Ejercicio2.Models.Genre", "genre")
                        .WithMany("Games")
                        .HasForeignKey("genreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");
                });

            modelBuilder.Entity("Ejercicio2.Models.Genre", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
